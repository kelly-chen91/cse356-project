version: "3.3"

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  # SMTP Server
  mail:
    image: boky/postfix
    container_name: postfix
    restart: always
    environment:
      - "ALLOWED_SENDER_DOMAINS=doitand711gang.cse356.compas.cs.stonybrook.edu"
      - "MYNETWORKS=130.245.136.0/24"
    network_mode: "host"

  # NodeJS
  node:
    container_name: node
    build: .
    # ports:
    #   - "80:80"
    volumes:
      - ./src:/app/src # Mount your local directory to the container
      - /mnt/media:/app/media # Mounting the mounted volume to the container.
      - ./padded_videos:/app/padded_videos
      - ./videos:/app/videos
    env_file:
      - .env
    depends_on:
      - mail
      - mongodb
      - nginx
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    # environment:
    #   - CERTBOT_EMAIL=kelly.chen.6@stonybrook.edu
    env_file:
      - ./nginx/nginx-certbot.env
    ports:
      - 80:80 # Reverse Proxying Node
      - 443:443
    volumes: # Storage can be either a
      - nginx_secrets:/etc/letsencrypt # Docker managed volume (see list at the bottom)
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d # or a host mount with a relative or full path.

  # # Redis for Gorse
  # redis:
  #   container_name: redis
  #   image: redis
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379

  # rec_system:
  #   container_name: recsys
  #   build: ./rec_system/
  #   volumes:
  #     - ./rec_system/app.py:/app/
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - redis
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379

volumes:
  mongo-data:
  nginx_secrets:
